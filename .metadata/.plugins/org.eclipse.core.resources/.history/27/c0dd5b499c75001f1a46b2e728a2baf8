package com.example;

import java.io.IOException;
import java.io.PrintWriter;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

/**
 * Servlet implementation class ValidateServlet
 */
@WebServlet("/ValidateServlet")
public class ValidateServlet extends HttpServlet {
	private static final long serialVersionUID = 1L;
	
	private static final String NAME_PATTERN = "^[a-zA-Z]+$";
	private static final String EMAIL_PATTERN = "^[\\w-\\.]+@([\\w-]+\\.)+[\\w-]{2,4}$";
    private static final String PASSWORD_PATTERN = "^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@#$%_&])[A-Za-z\\d@#$%_&]{6,}$";
    
	protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		response.setContentType("index.jsp");
        PrintWriter writer = response.getWriter();

        // Get form data
        String firstName = request.getParameter("firstName");
        String lastName = request.getParameter("lastName");
        String mobile = request.getParameter("mobile");
        String email = request.getParameter("email");
        String password = request.getParameter("password");

        // Validate form data
        boolean isValid = validateForm(firstName, lastName, mobile, email, password);

        if (isValid) {
        	writer.println("<h2>Form submitted successfully!</h2>");
        } else {
        	writer.println("<h2>Form validation failed. Please check your input.</h2>");
        }
    }

    private boolean validateForm(String firstName, String lastName, String mobile, String email, String password) {
        
        if (!validateField(firstName, NAME_PATTERN)) {
            System.out.println("Invalid First Name");
            return false;
        }

        if (!validateField(email, EMAIL_PATTERN)) {
            System.out.println("Invalid Email");
            return false;
        }

        if (!validateField(password, PASSWORD_PATTERN)) {
            System.out.println("Invalid Password");
            return false;
        }

        return true;
    }

    private boolean validateField(String value, String pattern) {
        Pattern p = Pattern.compile(pattern);
        Matcher m = p.matcher(value);
        return m.matches();
	}

}
